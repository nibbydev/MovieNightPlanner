@model MovieNight.Models.List.ListNewViewModel
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment HostingEnvironment
@{
    ViewBag.Title = "Add new movie";
}
@section Scripts {
    <script type="text/javascript">
        @if (HostingEnvironment.EnvironmentName.Equals("Development")) {
            @Html.Raw("const URL = 'https://localhost:5001/List/Add';")
        } else {
            @Html.Raw("const URL = 'https://movieplanner.live/List/Add';")
        }
    
        $("#modal-url").on("input", getAndVerifyInputs);
        $("#modal-submit").click(submit);

        function submit() {
            const data = getAndVerifyInputs();
            if (!data.Url) {
                return;
            }

            const btn = $(this);
            const span = $("#modal-status");

            // Clear any previous content
            span.empty();
            // Remove coloring
            span.removeClass();
            // Display buffering symbol
            span.addClass("spinner-border");
            btn.prop("disabled", true);

            const request = $.ajax({
                url: URL,
                data: data,
                type: "POST",
                async: true,
                dataTypes: "json"
            });

            request.done(function (response) {
                span.removeClass();
                span.addClass("text-success");
                btn.prop("disabled", false);
                span.html(response);
            });

            request.fail(function (response) {
                span.removeClass();
                span.addClass("text-danger");
                span.html(response.responseText);
                btn.prop("disabled", false);
            });
        }

        function getAndVerifyInputs() {
            return {
                Url: getAndVerify("#modal-url", /^(https?:\/\/)?m\w{9}t\.net\/\w{5}\/\d+\/.+$/)
            };
            
            function getAndVerify(selector, pattern) {
                const form = $(selector);
                const input = form.val().trim();

                form.removeClass();
                form.addClass("form-control");

                if (pattern.test(input)) {
                    form.addClass("is-valid");
                    return input;
                } else {
                    form.addClass("is-invalid");
                    return null;
                }
            }
        }
    </script>
}

<div class="row">
    <div class="col-lg-6 col-md-8 col-12 offset-md-2 offset-lg-3">
        <div class="card mb-3">
            <div class="card-header">
                <div class="card-title">Add new entry</div>
            </div>
            <div class="card-body">
                <div class="text-center">For example</div>
                <p class="text-success text-center">https://myanimelist.net/anime/33352/Violet_Evergarden</p>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="fa fa-link"></i>
                            </span>
                        </div>
                        <input asp-for="Url" id="modal-url" class="form-control" placeholder="MAL link">
                    </div>
                </div>
                <div class="text-center">
                    <span id="modal-status"></span>
                </div>
            </div>
            <button id="modal-submit" type="button" class="btn btn-block btn-light">Add</button>
        </div>
    </div>
</div>