@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment HostingEnvironment
@model MovieNight.Models.List.ListViewModel

@{
    ViewBag.Title = "Planned List";
    ViewBag.JumbotronTitle = "Planned";
    ViewBag.JumbotronSubTitle = "Suggestions for the next movie night";
}

@section Scripts {
    <script type="text/javascript">
        @if (HostingEnvironment.EnvironmentName.Equals("Development")) {
            @Html.Raw("const URL = 'https://localhost:5001/List/Action';")
        }
        else {
            @Html.Raw("const URL = 'https://movieplanner.live/List/Action';")
        }
    
        $("button").click(submit);

        function submit() {
            const btn = $(this);
            const action = btn.attr("action");
            const id = btn.attr("id");

            updateBtnState(action, id);

            // Get data from button
            const payload = {
                action: action,
                id: id
            };

            const request = $.ajax({
                url: URL,
                data: payload,
                type: "POST",
                async: true,
                dataTypes: "json"
            });

            request.done(function(response) {
                console.log(response);
            });

            request.fail(function(response) {
                console.log(response);
            });
        }

        function updateBtnState(action, id) {
            // Find all buttons with the provided id
            const buttons = $(`button[id=${id}]`);

            // Loop though each button
            for (let i = 0; i < buttons.length; i++) {
                const button = $(buttons[i]);
                const tmpAction = button.attr("action");

                // Button was active before, decrement counter
                const wasActive = button.hasClass("active");
                if (wasActive) {
                    changeButtonCounter(button, -1);
                    button.removeClass("active");
                } else if (tmpAction === action) {
                    changeButtonCounter(button, 1);
                    button.addClass("active");
                }
            }
        }

        function changeButtonCounter(button, value) {
            const span = $("span", button);

            value += parseInt(span.html());
            span.html(value);

            if (value <= 0) {
                span.addClass("d-none");
            } else span.removeClass("d-none");
        }
    </script>
}

<div class="row">
    @foreach (var item in Model.PlannedSubmissions) {
        <div class="col-xl-6 col-12">
            <div class="card flex-column flex-sm-row overflow-hidden mb-3">
                <div class="d-block d-sm-none">
                    <img class="card-img-top border-bottom" src="@item.ImageUrl" alt="..."/>
                </div>

                <div class="h-auto border-right d-none d-sm-block">
                    <img src="@item.ImageUrl" class="w-auto" alt="..."/>
                </div>

                <div class="d-flex flex-column w-100">
                    <div class="card-body pb-0">
                        <a href="@item.Url" target="_blank">
                            <h5 class="card-title text-center">@item.Title</h5>
                        </a>

                        <div class="d-flex flex-row">
                            <div class="w-100 flex-column mr-3">
                                <div class="p-1"></div>
                                <div class="border-top"></div>
                                <div class="p-1"></div>
                            </div>
                            <a data-toggle="collapse" href="#collapse-votes-@item.Id">
                                <span class="text-nowrap">Click me</span>
                            </a>
                            <div class="w-100 flex-column ml-3">
                                <div class="p-1"></div>
                                <div class="border-top"></div>
                                <div class="p-1"></div>
                            </div>
                        </div>

                        <div class="collapse show" id="collapse-votes-@item.Id">
                            <table class="table table-borderless table-xs mb-1">
                                <tbody>
                                <tr>
                                    <td class="text-nowrap">Posted by</td>
                                    <td class="w-100">
                                        <small>@item.User.Username</small>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Score</td>
                                    <td>
                                        <small>@(item.Score?.ToString() ?? "-")</small>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Duration</td>
                                    <td>
                                        <small>@item.Duration</small>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Rating</td>
                                    <td>
                                        <small>@item.Rating</small>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Genres</td>
                                    <td>
                                        <small>@item.Genres</small>
                                    </td>
                                </tr>
                                </tbody>
                            </table>
                        </div>

                    </div>

                    <div class="collapse" id="collapse-votes-@item.Id">
                        <div class="row no-gutters py-2">
                            @if (item.Votes.Count == 0) {
                                <div class="col text-center">No votes yet</div>
                            }
                            else {
                                <div class="col text-center border-right">
                                    @foreach (var vote in item.Votes.Where(t => t.Value == 1)) {
                                        <div class="font-weight-light text-break">@vote.User.Username</div>
                                    }
                                </div>
                                <div class="col text-center border-right">
                                    @foreach (var vote in item.Votes.Where(t => t.Value == 0)) {
                                        <div class="font-weight-light text-break">@vote.User.Username</div>
                                    }
                                </div>
                                <div class="col text-center">
                                    @foreach (var vote in item.Votes.Where(t => t.Value == -1)) {
                                        <div class="font-weight-light text-break">@vote.User.Username</div>
                                    }
                                </div>
                            }
                        </div>
                    </div>

                    <div class="d-flex flex-row mt-auto border-top">
                        <button type="button" class="btn btn-block text-nowrap border-right m-0" action="upvote" id="@item.Id"
                                asp-disable="@(HttpContextAccessor.HttpContext.Session.GetString("username") == null)"
                                asp-if-class-btn-light="@(!item.UserHasVotedFor)"
                                asp-if-class-btn-success="@item.UserHasVotedFor"
                                asp-if-class-active="@item.UserHasVotedFor">
                            <i class="fa fa-arrow-up mr-2"></i>
                            <span class="badge">@(item.UpVotes > 0 ? item.UpVotes : 0)</span>
                        </button>
                        <button type="button" class="btn btn-block text-nowrap border-right m-0" action="seen" id="@item.Id"
                                asp-disable="@(HttpContextAccessor.HttpContext.Session.GetString("username") == null)"
                                asp-if-class-btn-light="@(!item.UserHasSeen)"
                                asp-if-class-btn-warning="@item.UserHasSeen"
                                asp-if-class-active="@item.UserHasSeen">
                            <i class="fa fa-eye mr-2"></i>
                            <span class="badge">@(item.Seen > 0 ? item.Seen : 0)</span>
                        </button>
                        <button type="button" class="btn btn-block text-nowrap m-0" action="downvote" id="@item.Id"
                                asp-disable="@(HttpContextAccessor.HttpContext.Session.GetString("username") == null)"
                                asp-if-class-btn-light="@(!item.UserHasVotedAgainst)"
                                asp-if-class-btn-danger="@item.UserHasVotedAgainst"
                                asp-if-class-active="@item.UserHasVotedAgainst">
                            <i class="fa fa-arrow-down mr-2"></i>
                            <span class="badge">@(item.DownVotes > 0 ? item.DownVotes : 0)</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>