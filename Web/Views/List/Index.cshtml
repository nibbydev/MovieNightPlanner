@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model MovieNight.Models.List.ListViewModel

@{
    ViewBag.Title = "List";
    ViewBag.JumbotronTitle = "Recommendations";
    ViewBag.JumbotronSubTitle = "Suggestions for the next movie night";
}

<div class="row">
    @foreach (var item in Model.Submissions) {
        <div class="col-lg-4 col-md-6 col-12">
            <div class="card mb-3">
                <a href="@Html.DisplayFor(modelItem => item.Url)" target="_blank">
                    <img alt="..." src="@Html.DisplayFor(modelItem => item.ImageUrl)" class="card-img-top"/>
                </a>
                <div class="card-body">
                    <h5 class="card-title">
                        @Html.DisplayFor(t => item.Title)
                    </h5>
                    <hr/>

                    <table class="table table-borderless table-xs mb-0">
                        <tbody>
                        <tr>
                            <td>Score</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Score)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Duration</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Duration)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Rating</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Rating)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Genres</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Genres)</small>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                    <hr/>
                    <small class="text-muted">Suggested by @Html.DisplayFor(t => item.User.Username)</small>
                </div>

                <div class="row no-gutters">
                    <div class="col">
                        <form asp-controller="List" asp-action="Vote">
                            <input asp-for="Id" type="hidden" value="@item.Id"/>
                            <input asp-for="Vote" type="hidden" value="@true"/>

                            @if (HttpContextAccessor.HttpContext.Session.GetString("username") != null) {
                                <button type="submit" class="btn btn-block btn-light">
                                    <i class="fa fa-thumbs-up mr-2"></i>
                                    @if (item.UpVotes > 0) {
                                        if (item.UserHasVotedFor) {
                                            <span class="badge badge-success">@Html.DisplayFor(t => item.UpVotes)</span>
                                        } else {
                                            <span class="badge badge-secondary">@Html.DisplayFor(t => item.UpVotes)</span>
                                        }
                                    }
                                </button>
                            } else {
                                <button disabled type="submit" class="btn btn-block btn-light">
                                    <i class="fa fa-thumbs-up mr-2"></i>
                                    @if (item.UpVotes > 0) {
                                        <span class="badge badge-secondary">@Html.DisplayFor(t => item.UpVotes)</span>
                                    }
                                </button>
                            }
                        </form>
                    </div>
                    <div class="col">
                        <form asp-controller="List" asp-action="Vote">
                            <input asp-for="Id" type="hidden" value="@item.Id"/>
                            <input asp-for="Vote" type="hidden" value="@false"/>

                            @if (HttpContextAccessor.HttpContext.Session.GetString("username") != null) {
                                <button type="submit" class="btn btn-block btn-light border-right">
                                    <i class="fa fa-thumbs-down mr-2"></i>
                                    @if (item.DownVotes > 0) {
                                        if (item.UserHasVotedAgainst) {
                                            <span class="badge badge-danger">@Html.DisplayFor(t => item.DownVotes)</span>
                                        } else {
                                            <span class="badge badge-secondary">@Html.DisplayFor(t => item.DownVotes)</span>
                                        }
                                    }
                                </button>
                            } else {
                                <button disabled class="btn btn-block btn-light border-right">
                                    <i class="fa fa-thumbs-down mr-2"></i>
                                    @if (item.DownVotes > 0) {
                                        <span class="badge badge-secondary">@Html.DisplayFor(t => item.DownVotes)</span>
                                    }
                                </button>
                            }

                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="jumbotron">
    <div class="container">
        <h1 class="display-4">Watched</h1>
        <hr/>
        <p class="lead">Movies from previous weekends</p>
    </div>
</div>

<div class="row">
    @foreach (var item in Model.WatchedSubmissions) {
        <div class="col-lg-4 col-md-6 col-12">
            <div class="card mb-3">
                <a href="@Html.DisplayFor(modelItem => item.Url)" target="_blank">
                    <img alt="..." src="@Html.DisplayFor(modelItem => item.ImageUrl)" class="card-img-top"/>
                </a>
                <div class="card-body">
                    <h5 class="card-title">
                        @Html.DisplayFor(t => item.Title)
                    </h5>
                    <hr/>

                    <table class="table table-borderless table-xs mb-0">
                        <tbody>
                        <tr>
                            <td>Score</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Score)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Duration</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Duration)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Rating</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Rating)</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Genres</td>
                            <td>
                                <small>@Html.DisplayFor(t => item.Genres)</small>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                    <hr/>
                    <small class="text-muted">Suggested by @Html.DisplayFor(t => item.User.Username)</small>
                </div>
            </div>
        </div>
    }
</div>
