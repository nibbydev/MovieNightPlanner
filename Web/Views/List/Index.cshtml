@model ListViewModel

@{
    ViewBag.Title = "List";
}

<div class="row">
    @foreach (var item in Model.Submissions) {
        <div class="col-lg-4 col-md-6 col-12">
            <div class="card mb-3">
                <a href="@Html.DisplayFor(modelItem => item.Url)" target="_blank">
                    <img alt="..." src="@Html.DisplayFor(modelItem => item.ImageUrl)" class="card-img-top"/>
                </a>
                <div class="card-body">
                    <h5 class="card-title">
                        @item.Title
                    </h5>
                    <p class="card-text">
                        <small class="text-muted">Added by @item.AddedBy</small>
                    </p>
                </div>
                <div class="row no-gutters">
                    <div class="col">
                        <form asp-controller="List" asp-action="Vote">
                            <input asp-for="Id" type="hidden" value="@item.Id"/>
                            <input asp-for="Vote" type="hidden" value="@true"/>
                            
                            <button type="submit" class="btn btn-block btn-light rounded-0">
                                <i class="fa fa-thumbs-up mr-2"></i>
                                @if (item.UpVotes > 0) {
                                    <span class="badge badge-success">@Html.DisplayFor(t => item.UpVotes)</span>
                                }
                            </button>
                        </form>
                    </div>
                    <div class="col">
                        <form asp-controller="List" asp-action="Vote">
                            <input asp-for="Id" type="hidden" value="@item.Id"/>
                            <input asp-for="Vote" type="hidden" value="@false"/>
                            
                            <button type="submit" class="btn btn-block btn-light rounded-0">
                                <i class="fa fa-thumbs-down mr-2"></i>
                                @if (item.DownVotes > 0) {
                                    <span class="badge badge-danger">@Html.DisplayFor(t => item.DownVotes)</span>
                                }
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
